<?php
/*********
 * Create by Phadh
 */
include ("library/PHPExcel/PHPEXCHelper.php");
/**
 * *****
 * PHPExcel
 */
require_once 'library/PHPExcel/PHPExcel.php';
include_once 'PublicdetailController.php';
/**
 * PHPExcel_IOFactory
 */
include 'HelpFuncExportExcel.php';
require_once 'library/PHPExcel/PHPExcel/IOFactory.php';
class NhanlucthuocdiabanxaController extends PublicdetailController {
	private $ThongtincoquanId;
	private $Namhoatdong;
	private $_MHistory;
	public function init() {
		$this->initValue ();
		$this->ThongtincoquanId = $this->TblThongtincoquanbyId [0] ['Id'];
		$this->Namhoatdong = $this->TblThongtincoquanbyId [0] ['Namhoatdong'];
		$this->_MHistory = new Model_History ();
	}
	
	public function jsonAction() {
		$page = isset ( $_POST ['page'] ) ? intval ( $_POST ['page'] ) : 1;
		$rows = isset ( $_POST ['rows'] ) ? intval ( $_POST ['rows'] ) : 10;
		$sort = isset ( $_POST ['sort'] ) ? strval ( $_POST ['sort'] ) : 'Id';
		$order = isset ( $_POST ['order'] ) ? strval ( $_POST ['order'] ) : 'desc';
		$offset = ($page - 1) * $rows;
		
		$this->_helper->layout ()->disableLayout ();
		
		$mnhansu = new Model_Nhanlucthuocdiabanxa ();
		$jsonObj = json_encode ( $mnhansu->getFetObj ( $sort, $order, $offset, $rows, $this->ThongtincoquanId, $this->Namhoatdong ) );
		
		return $this->view->jsonObj = $jsonObj;
	}
	public function comboAction() {
		$this->_helper->layout ()->disableLayout ();
		$diaban = new Model_Nhanlucthuocdiabanxa ();
		$jsonObj = json_encode ( $diaban->getIdName () );
		return $this->view->jsonObj = $jsonObj;
	}
	public function comboistramyteAction() {
		$this->_helper->layout ()->disableLayout ();
		$diaban = new Model_Nhanlucthuocdiabanxa ();
		$jsonObj = json_encode ( $diaban->getIdNameistramyte () );
		return $this->view->jsonObj = $jsonObj;
	}
	public function addAction() {
		$this->_helper->layout ()->disableLayout ();
		$jsonObj = array ();
		$Hoten = $_REQUEST ['Hoten'];
		$gioitinh = isset ( $_REQUEST ['Gioitinh'] ) ? $_REQUEST ['Gioitinh'] : '';
		$gioitinh = ($gioitinh == 'on') ? 'Nam' : 'Nữ';
		$ngaysinh = $_REQUEST ['Ngaysinh'];
		$cmnd = $_REQUEST ['Cmnd'];
		$ngaycap = (isset ( $_REQUEST ['Ngaycap'] ) && $_REQUEST ['Ngaycap'] != "") ? $_REQUEST ['Ngaycap'] : "";
		$noicap = $_REQUEST ['Noicap'];
		$diachi = $_REQUEST ['Diachi'];
		$dienthoai = $_REQUEST ['Dienthoai'];
		$email = $_REQUEST ['Email'];
		$Kynang = $_REQUEST ['Kynang'];
		$TrinhdohocvanId = $_REQUEST ['TrinhdohocvanId'];
		$Ghichu = $_REQUEST ['Ghichu'];
		$DiabanId = $_REQUEST ['diaban'];
		$chandung = $chandung = $this->getImage ();
		// Convert datetime to format y-m-d
		list ( $date, $month, $year ) = explode ( "/", $ngaysinh );
		$ngaysinh = $year . '-' . $month . '-' . $date;
		if ($ngaycap != "") {
			list ( $date, $month, $year ) = explode ( "/", $ngaycap );
			$ngaycap = $year . '-' . $month . '-' . $date;
		}
		// Check duplicate
		$mnhansu = new Model_Nhanlucthuocdiabanxa ();
		$dup = $mnhansu->dupliObj ( 0, $Hoten, $this->ThongtincoquanId, $this->Namhoatdong );
		
		if ($dup > 0) {
			echo "<script type=\"text/javascript\">
					alert('Đang tồn tại dữ liệu trong hệ thống!');
					</script>";
			$jsonObj ["success"] = false;
			return $this->view->jsonObj = json_encode ( $jsonObj );
		} else {
			
			$data = array (
					'Hoten' => $Hoten,
					'Gioitinh' => $gioitinh,
					'Ngaysinh' => $ngaysinh,
					'Cmnd' => $cmnd,
					'Ngaycap' => $ngaycap,
					'Noicap' => $noicap,
					'Diachi' => $diachi,
					
					'Dienthoai' => $dienthoai,
					'Email' => $email,
					'Chandung' => $chandung,
					'Kynang' => $Kynang,
					'TrinhdohocvanId' => $TrinhdohocvanId,
					'ThongtincoquanId' => $this->ThongtincoquanId,
					'Namhoatdong' => $this->Namhoatdong,
					'Ghichu' => $Ghichu,
					'DiabanId' => $DiabanId 
			);
			$id = $mnhansu->addObj ( $data );
			$this->_MHistory->insert ( $this->TblUserbyId [0] ['Id'], $this->Time_Ac, 'tblnhansu', 'Thêm', $this->UserIP );
			$jsonObj ["success"] = true;
		}
		
		return $this->view->jsonObj = json_encode ( $jsonObj );
	}
	public function updateAction() {
		$this->_helper->layout ()->disableLayout ();
		$id = $this->_getParam ( 'idnhansu' );
		$Hoten = $_REQUEST ['Hoten'];
		$gioitinh = isset ( $_REQUEST ['Gioitinh'] ) ? $_REQUEST ['Gioitinh'] : '';
		$gioitinh = ($gioitinh == 'on') ? 'Nam' : 'Nữ';
		$ngaysinh = $_REQUEST ['Ngaysinh'];
		$cmnd = $_REQUEST ['Cmnd'];
		$ngaycap = (isset ( $_REQUEST ['Ngaycap'] ) && $_REQUEST ['Ngaycap'] != "") ? $_REQUEST ['Ngaycap'] : "";
		$noicap = $_REQUEST ['Noicap'];
		$diachi = $_REQUEST ['Diachi'];
		$dienthoai = $_REQUEST ['Dienthoai'];
		$email = $_REQUEST ['Email'];
		$Kynang = $_REQUEST ['Kynang'];
		$TrinhdohocvanId = $_REQUEST ['TrinhdohocvanId'];
		$Ghichu = $_REQUEST ['Ghichu'];
		$DiabanId = $_REQUEST ['diaban'];
		$chandung = $this->getImage ();
		// Convert datetime to format y-m-d
		list ( $date, $month, $year ) = explode ( "/", $ngaysinh );
		$ngaysinh = $year . '-' . $month . '-' . $date;
		if ($ngaycap != "") {
			list ( $date, $month, $year ) = explode ( "/", $ngaycap );
			$ngaycap = $year . '-' . $month . '-' . $date;
		}
		// Check duplicate
		$mnhansu = new Model_Nhanlucthuocdiabanxa ();
		if ($chandung == '') {
			$data = array (
					'Hoten' => $Hoten,
					'Gioitinh' => $gioitinh,
					'Ngaysinh' => $ngaysinh,
					'Cmnd' => $cmnd,
					'Ngaycap' => $ngaycap,
					'Noicap' => $noicap,
					'Diachi' => $diachi,
					'Dienthoai' => $dienthoai,
					'Email' => $email,
					'Kynang' => $Kynang,
					'TrinhdohocvanId' => $TrinhdohocvanId,
					'Ghichu' => $Ghichu,
					'DiabanId' => $DiabanId 
			);
		} else {
			$data = array (
					'Hoten' => $Hoten,
					'Gioitinh' => $gioitinh,
					'Ngaysinh' => $ngaysinh,
					'Cmnd' => $cmnd,
					'Ngaycap' => $ngaycap,
					'Noicap' => $noicap,
					'Diachi' => $diachi,
					'Dienthoai' => $dienthoai,
					'Email' => $email,
					'Chandung' => $chandung,
					'Kynang' => $Kynang,
					'TrinhdohocvanId' => $TrinhdohocvanId,
					'Ghichu' => $Ghichu,
					'DiabanId' => $DiabanId 
			);
		}
		if (isset ( $id ) && $id > 0) {
			$mnhansu->updateObj ( $id, $data );
			$this->_MHistory->insert ( $this->TblUserbyId [0] ['Id'], $this->Time_Ac, 'tblnhansu', 'Sửa', $this->UserIP );
			$jsonObj ["success"] = true;
		}
		return $this->view->jsonObj = json_encode ( $jsonObj );
	}
	/**
	 * Daitk
	 *
	 * @return string
	 */
	public function changeAction() {
		$this->_helper->layout ()->disableLayout ();
		$id = $_REQUEST ['Id'];
		$lydo = $_REQUEST ['Lydo'];
		$trangthai = $_REQUEST ['Trangthai'];
		if ($trangthai == '1')
			$ngayketthuc = NULL;
		else
			$ngayketthuc = $_REQUEST ['Ngayketthuc'];
		$mnhansu = new Model_Nhanlucthuocdiabanxa ();
		$data = array (
				'Ngayketthuc' => $this->convertDate ( $ngayketthuc ),
				'Lydo' => $lydo 
		);
		if (isset ( $id ) && $id > 0) {
			$mnhansu->updateObj ( $id, $data );
			$this->_MHistory->insert ( $this->TblUserbyId [0] ['Id'], $this->Time_Ac, 'tblnhansu', 'Thay đổi trạng thái', $this->UserIP );
			$jsonObj ["success"] = true;
		}
		return $this->view->jsonObj = json_encode ( $jsonObj );
	}
	public function delAction() {
		$this->_helper->layout ()->disableLayout ();
		$items = $_REQUEST ['items'];
		$jsonObj = array (
				'success' => false 
		);
		$mnhanvien = new Model_Nhanlucthuocdiabanxa ();
		foreach ( $items as $item ) {
			if ($item ['Id'] != null) {
				$mnhanvien->delObj ( $item ['Id'] );
				$jsonObj = array (
						'success' => true 
				);
			}
		}
		$this->_MHistory->insert ( $this->TblUserbyId [0] ['Id'], $this->Time_Ac, 'tblnhansu', 'Xóa', $this->UserIP );
		return $this->view->jsonObj = json_encode ( $jsonObj );
	}
	public function expxlshosoAction() {
		$this->_helper->layout ()->disableLayout ();
		$helpExport = new HelpFuncExportExcel ();
		$id = $this->_getParam ( 'idnhansu' );
		$objReader = PHPExcel_IOFactory::createReader ( "Excel5" );
		$jsonObj = null;
		$colIndex = '0';
		$rowIndex = '';
		$nhansu = new Model_Nhanlucthuocdiabanxa ();
		try {
			if (isset ( $id ) && $id != '') {
				$jsonObj = $nhansu->getHoso ( $this->ThongtincoquanId, $this->Namhoatdong, $id );
				$objPHPExcel = $objReader->load ( "public/media/temp/Nhanlucthuocdiaban.xls" );
				$sheet = $objPHPExcel->getActiveSheet ();
				$rowIndex = '3';
				$colIndex = 'D';
				foreach ( $jsonObj as $row ) {
					// echo '<img style="width: 100px; height: 120px; border:
					// 1px solid #CCC;" src="data:image/jpeg;base64,' .
					// base64_encode( $row['Chandung'] ) . '" />';
					$sheet->setCellValue ( "A" . "3", $row ['Chandung'] );
					$sheet->setCellValue ( "D" . "3", $row ['Hoten'] );
					$sheet->setCellValue ( "D" . "4", $row ['Ngaysinh'] );
					$sheet->setCellValue ( "G" . "4", $row ['Gioitinh'] );
					$sheet->setCellValue ( "D" . "5", $row ['Cmnd'] );
					if ($row ['Ngaycap'] != "00/00/0000") {
						$sheet->setCellValue ( "G" . "5", $row ['Ngaycap'] );
					} else {
						$sheet->setCellValue ( "G" . "5", '' );
					}
					$sheet->setCellValue ( "D" . "6", $row ['Noicap'] );
					$sheet->setCellValue ( "D" . "7", $row ['Diachi'] );
					$sheet->setCellValue ( "D" . "8", $row ['Dienthoai'] );
					$sheet->setCellValue ( "D" . "9", $row ['Email'] );
					$sheet->setCellValue ( "D" . "10", $row ['Chucvu'] );
				}
			}
			// Lấy dữ liệu
			
			// Lư Index để format.
			$objPHPExcel->getActiveSheet ()->getPageSetup ()->setOrientation ( PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE );
			$objPHPExcel->getActiveSheet ()->getPageSetup ()->setPaperSize ( PHPExcel_Worksheet_PageSetup::PAPERSIZE_A5 );
			$pageMargin = $sheet->getPageMargins ();
			$pageMargin->setTop ( .5 );
			$pageMargin->setLeft ( .2 );
			$pageMargin->setRight ( .2 );
			header ( 'Content-Type: application/vnd.ms-excel' );
			header ( 'Content-Disposition: attachment;filename="Ho_so_nhan_vien(' . date ( "d/m/Y" ) . ').xls"' );
			header ( 'Cache-Control: max-age=0' );
			$objWriter = PHPExcel_IOFactory::createWriter ( $objPHPExcel, 'Excel5' );
			$objWriter->save ( 'php://output' );
		} catch ( Exception $e ) {
			echo "<script type=\"text/javascript\">
					alert('Exception: Export Excel!');
					</script>";
		}
	}
	public function exportxlsAction() {
		$this->_helper->layout ()->disableLayout ();
		$helpExport = new HelpFuncExportExcel ();
		$objReader = PHPExcel_IOFactory::createReader ( "Excel5" );
		$hoten = $this->_getParam ( 'sHoten' );
		$chucvu = $this->_getParam ( 'sChucvu' );
		$gioitinh = $this->_getParam ( 'sGioitinh' );
		$diachi = $this->_getParam ( 'sDiachi' );
		$colIndex = '';
		$rowIndex = 0;
		try {
			$objPHPExcel = new PHPExcel ();
			$sheet = $objPHPExcel->getActiveSheet ();
			/*
			 * Bắt đầu set các giá trị, căn chỉnh style Bắt đầu set các giá trị
			 * tĩnh.
			 */
			$sheet->setCellValue ( 'A1', $this->TblThongtincoquanbyId [0] ['Tencoquan'] );
			$sheet->mergeCellsByColumnAndRow ( 0, 1, 3, 1 );
			$helpExport->setStyle_13_TNR_B_L ( $sheet, 'A1', 'C1' );
			$sheet->setCellValue ( 'A2', 'DANH SÁCH NHÂN VIÊN Y TẾ KHÔNG THUỘC TRẠM Y TẾ' );
			$sheet->mergeCellsByColumnAndRow ( 0, 2, 6, 2 );
			$helpExport->setStyleTitleDoc ( $sheet, 'A2', 'G2' );
			
			$rowStart = 4;
			$colStart = 'A';
			$rowIndex = $rowStart;
			$colIndex = $colStart;
			$sheet = $objPHPExcel->getActiveSheet ();
			// BEGIN set width for column
			$sheet->getColumnDimension ( 'A' )->setWidth ( 5 );
			$sheet->getColumnDimension ( 'B' )->setWidth ( 20 );
			$sheet->getColumnDimension ( 'C' )->setWidth ( 10 );
			$sheet->getColumnDimension ( 'D' )->setWidth ( 10 );
			$sheet->getColumnDimension ( 'E' )->setWidth ( 10 );
			$sheet->getColumnDimension ( 'F' )->setWidth ( 10 );
			$sheet->getColumnDimension ( 'G' )->setWidth ( 15 );
			// END set width for column
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, 'STT', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, 'Họ và tên', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, 'Giới tính', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, 'Ngày sinh', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, 'Số CMND', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, 'Ngày cấp', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, 'Địa chỉ', $colIndex );
			$helpExport->setStyle_11_TNR_B_C ( $sheet, $colStart . $rowIndex, $colIndex . ($rowIndex + 1) );
			// $helpExport->setStyleTitleTable ( $sheet, $colStart . $rowIndex,
			// $colIndex . ($rowIndex + 1) );
			$rowIndex += 1;
			$colIndex = $colStart;
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, '1', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, '2', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, '3', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, '4', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, '5', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, '6', $colIndex );
			$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, '7', $colIndex );
			
			$helpExport->setStyle_10_TNR_I_C ( $sheet, $colStart . $rowIndex, $colIndex . $rowIndex );
			// Lấy dữ liệu
			$nhanluc = new Model_Nhanlucthuocdiabanxa ();
			$jsonObj = $nhanluc->getdanhsach ( $hoten, $chucvu, $gioitinh, $diachi, $this->ThongtincoquanId, $this->Namhoatdong );
			$tong = $nhanluc->tong ( $hoten, $chucvu, $gioitinh, $diachi, $this->ThongtincoquanId, $this->Namhoatdong );
			if (count ( $jsonObj ) > 0) {
				$stt = 0;
				foreach ( $jsonObj as $row ) {
					$stt ++;
					$rowIndex ++;
					$colIndex = $colStart;
					$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, $stt, $colIndex );
					$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, $row ['Hoten'], $colIndex );
					$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, $row ['Gioitinh'], $colIndex );
					$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, $row ['Ngaysinh'], $colIndex );
					$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, $row ['Cmnd'], $colIndex );
					if ($row ['Ngaycap'] != "00/00/0000") {
						$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, $row ['Ngaycap'], $colIndex );
					} else {
						$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, '', $colIndex );
					}
					$colIndex = $helpExport->setValueForSheet ( $sheet, $colIndex . $rowIndex, $row ['Diachi'], $colIndex );
					$helpExport->setStyle_11_TNR_N_L ( $sheet, $colStart . $rowIndex, $colIndex . $rowIndex );
					$helpExport->setStyle_Align_Center ( $sheet, 'A' . $rowIndex, 'A' . $rowIndex );
				}
			}
			$sheet->getStyle ( 'A' . $rowStart . ':' . 'G' . $rowIndex )->getBorders ()->getOutline ()->setBorderStyle ( PHPExcel_Style_Border::BORDER_THIN );
			$sheet->getStyle ( 'A' . $rowStart . ':' . 'G' . $rowIndex )->getBorders ()->getInside ()->setBorderStyle ( PHPExcel_Style_Border::BORDER_THIN );
			$objPHPExcel->getActiveSheet ()->setTitle ( 'Page 1' );
			$rowIndex += 2;
			$sheet->setCellValue ( 'G' . $rowIndex, 'Tổng số nhân lực thuộc địa bàn: ' . $tong [0] ['Total'] );
			$helpExport->setStyle_12_TNR_B_L ( $sheet, 'G' . ($rowIndex - 1), 'G' . $rowIndex );
			/*
			 * Set active sheet index to the first sheet, so Excel opens this as
			 * the first sheet
			 */
			$objPHPExcel->setActiveSheetIndex ( 0 );
			/* Redirect output to a clientâ€™s web browser (Excel5) */
			$objPHPExcel->getActiveSheet ()->getPageSetup ()->setOrientation ( PHPExcel_Worksheet_PageSetup::ORIENTATION_PORTRAIT );
			$objPHPExcel->getActiveSheet ()->getPageSetup ()->setPaperSize ( PHPExcel_Worksheet_PageSetup::PAPERSIZE_A4 );
			$pageMargin = $sheet->getPageMargins ();
			$pageMargin->setTop ( .5 );
			$pageMargin->setLeft ( .7 );
			$pageMargin->setRight ( .7 );
			header ( 'Content-Type: application/vnd.ms-excel' );
			header ( 'Content-Disposition: attachment;filename="DSNhanlucthuocdiabanxa(' . date ( "d/m/Y" ) . ').xls"' );
			header ( 'Cache-Control: max-age=0' );
			$objWriter = PHPExcel_IOFactory::createWriter ( $objPHPExcel, 'Excel5' );
			$objWriter->save ( 'php://output' );
		} catch ( Exception $e ) {
			echo "<script type=\"text/javascript\">
					alert('Exception: Export Excel!');
					</script>";
		}
	}
	
	/**
	 * Pha dh
	 *
	 * @return string
	 */
	public function searAction() {
		$this->_helper->layout ()->disableLayout ();
		
		$page = isset ( $_POST ['page'] ) ? intval ( $_POST ['page'] ) : 1;
		$rows = isset ( $_POST ['rows'] ) ? intval ( $_POST ['rows'] ) : 10;
		$sort = isset ( $_POST ['sort'] ) ? strval ( $_POST ['sort'] ) : 'Id';
		$order = isset ( $_POST ['order'] ) ? strval ( $_POST ['order'] ) : 'desc';
		$offset = ($page - 1) * $rows;
		
		$hoten = $this->_getParam ( 'sHoten' );
		$chucvu = $this->_getParam ( 'sChucvu' );
		$gioitinh = $this->_getParam ( 'sGioitinh' );
		$diachi = $this->_getParam ( 'sDiachi' );
		
		$mnhanvien = new Model_Nhanlucthuocdiabanxa ();
		$jsonObj = json_encode ( $mnhanvien->searObj ( $hoten, $chucvu, $gioitinh, $diachi, $this->ThongtincoquanId, $this->Namhoatdong, $sort, $order, $offset, $rows ) );
		
		return $this->view->jsonObj = $jsonObj;
	}
}